// Copyright (c) 2021 Leonid Kneller. All rights reserved.
// Licensed under the MIT license.
// See the LICENSE file for full license information.

package kgeo

func seriesA1(ε float64) (A1 float64) {
	/*****
	   A1 = (1 + 1/4 * ε^2
	           + 1/64 * ε^4
	           + 1/256 * ε^6
	           + 25/16384 * ε^8
	           + 49/65536 * ε^10) / (1 - ε)
	*****/
	ε2 := ε * ε
	//
	A1 = (1 + ε2*(1.0/4+ε2*(1.0/64+ε2*(1.0/256+ε2*(25.0/16384+ε2*(49.0/65536)))))) / (1 - ε)
	//
	return
}

func seriesA2(ε float64) (A2 float64) {
	/*****
	   A2 = (1 - 3/4 * ε^2
	           - 7/64 * ε^4
	           - 11/256 * ε^6
	           - 375/16384 * ε^8
	           - 931/65536 * ε^10) / (1 + ε)
	*****/
	ε2 := ε * ε
	//
	A2 = (1 + ε2*(-3.0/4+ε2*(-7.0/64+ε2*(-11.0/256+ε2*(-375.0/16384+ε2*(-931.0/65536)))))) / (1 + ε)
	//
	return
}

func seriesA3(n, ε float64) (A3 float64) {
	/*****
	   A3 = 1 - (1/2 - 1/2*n) * ε
	          - (1/4 + 1/8*n - 3/8*n^2) * ε^2
	          - (1/16 + 3/16*n + 1/16*n^2 - 5/16*n^3) * ε^3
	          - (3/64 + 1/32*n + 5/32*n^2 + 5/128*n^3 - 35/128*n^4) * ε^4
	          - (3/128 + 5/128*n + 5/256*n^2 + 35/256*n^3 + 7/256*n^4) * ε^5
	          - (5/256 + 15/1024*n + 35/1024*n^2 + 7/512*n^3) * ε^6
	          - (25/2048 + 35/2048*n + 21/2048*n^2) * ε^7
	          - (175/16384 + 35/4096*n) * ε^8
	          - 245/32768 * ε^9
	*****/
	n2 := n * n
	n3 := n * n2
	n4 := n * n3
	c1 := -(1.0/2 - (1.0/2)*n)
	c2 := -(1.0/4 + (1.0/8)*n - (3.0/8)*n2)
	c3 := -(1.0/16 + (3.0/16)*n + (1.0/16)*n2 - (5.0/16)*n3)
	c4 := -(3.0/64 + (1.0/32)*n + (5.0/32)*n2 + (5.0/128)*n3 - (35.0/128)*n4)
	c5 := -(3.0/128 + (5.0/128)*n + (5.0/256)*n2 + (35.0/256)*n3 + (7.0/256)*n4)
	c6 := -(5.0/256 + (15.0/1024)*n + (35.0/1024)*n2 + (7.0/512)*n3)
	c7 := -(25.0/2048 + (35.0/2048)*n + (21.0/2048)*n2)
	c8 := -(175.0/16384 + (35.0/4096)*n)
	c9 := -245.0 / 32768
	//
	A3 = 1 + ε*(c1+ε*(c2+ε*(c3+ε*(c4+ε*(c5+ε*(c6+ε*(c6+ε*(c7+ε*(c8+ε*(c9))))))))))
	//
	return
}

func seriesC1(ε float64) (C1 [10]float64) {
	/*****
	   C1[1] = - 1/2 * ε
	           + 3/16 * ε^3
	           - 1/32 * ε^5
	           + 19/2048 * ε^7
	           - 3/4096 * ε^9
	   C1[2] = - 1/16 * ε^2
	           + 1/32 * ε^4
	           - 9/2048 * ε^6
	           + 7/4096 * ε^8
	           + 1/65536 * ε^10
	   C1[3] = - 1/48 * ε^3
	           + 3/256 * ε^5
	           - 3/2048 * ε^7
	           + 17/24576 * ε^9
	   C1[4] = - 5/512 * ε^4
	           + 3/512 * ε^6
	           - 11/16384 * ε^8
	           + 3/8192 * ε^10
	   C1[5] = - 7/1280 * ε^5
	           + 7/2048 * ε^7
	           - 3/8192 * ε^9
	   C1[6] = - 7/2048 * ε^6
	           + 9/4096 * ε^8
	           - 117/524288 * ε^10
	   C1[7] = - 33/14336 * ε^7
	           + 99/65536 * ε^9
	   C1[8] = - 429/262144 * ε^8
	           + 143/131072 * ε^10
	   C1[9] = - 715/589824 * ε^9
	   C1[10] = - 2431/2621440 * ε^10
	*****/
	ε2 := ε * ε
	ε3 := ε * ε2
	ε4 := ε * ε3
	ε5 := ε * ε4
	ε6 := ε * ε5
	ε7 := ε * ε6
	ε8 := ε * ε7
	ε9 := ε * ε8
	ε10 := ε * ε9
	//
	C1[0] = ε * (-1.0/2 + ε2*(3.0/16+ε2*(-1.0/32+ε2*(19.0/2048+ε2*(-3.0/4096)))))
	C1[1] = ε2 * (-1.0/16 + ε2*(1.0/32+ε2*(-9.0/2048+ε2*(7.0/4096+ε2*(1.0/65536)))))
	C1[2] = ε3 * (-1.0/48 + ε2*(3.0/256+ε2*(-3.0/2048+ε2*(17.0/24576))))
	C1[3] = ε4 * (-5.0/512 + ε2*(3.0/512+ε2*(-11.0/16384+ε2*(3.0/8192))))
	C1[4] = ε5 * (-7.0/1280 + ε2*(7.0/2048+ε2*(-3.0/8192)))
	C1[5] = ε6 * (-7.0/2048 + ε2*(9.0/4096+ε2*(-117.0/524288)))
	C1[6] = ε7 * (-33.0/14336 + ε2*(99.0/65536))
	C1[7] = ε8 * (-429.0/262144 + ε2*(143.0/131072))
	C1[8] = ε9 * (-715.0 / 589824)
	C1[9] = ε10 * (-2431.0 / 2621440)
	//
	return
}

func seriesC1p(ε float64) (C1p [10]float64) {
	/*****
	   C1'[1] = + 1/2 * ε
	            - 9/32 * ε^3
	            + 205/1536 * ε^5
	            - 4879/73728 * ε^7
	            + 9039/327680 * ε^9
	   C1'[2] = + 5/16 * ε^2
	            - 37/96 * ε^4
	            + 1335/4096 * ε^6
	            - 86171/368640 * ε^8
	            + 4119073/28311552 * ε^10
	   C1'[3] = + 29/96 * ε^3
	            - 75/128 * ε^5
	            + 2901/4096 * ε^7
	            - 443327/655360 * ε^9
	   C1'[4] = + 539/1536 * ε^4
	            - 2391/2560 * ε^6
	            + 1082857/737280 * ε^8
	            - 2722891/1548288 * ε^10
	   C1'[5] = + 3467/7680 * ε^5
	            - 28223/18432 * ε^7
	            + 1361343/458752 * ε^9
	   C1'[6] = + 38081/61440 * ε^6
	            - 733437/286720 * ε^8
	            + 10820079/1835008 * ε^10
	   C1'[7] = + 459485/516096 * ε^7
	            - 709743/163840 * ε^9
	   C1'[8] = + 109167851/82575360 * ε^8
	            - 550835669/74317824 * ε^10
	   C1'[9] = + 83141299/41287680 * ε^9
	   C1'[10] = + 9303339907/2972712960 * ε^10
	*****/
	ε2 := ε * ε
	ε3 := ε * ε2
	ε4 := ε * ε3
	ε5 := ε * ε4
	ε6 := ε * ε5
	ε7 := ε * ε6
	ε8 := ε * ε7
	ε9 := ε * ε8
	ε10 := ε * ε9
	//
	C1p[0] = ε * (1.0/2 + ε2*(-9.0/32+ε2*(205.0/1536+ε2*(-4879.0/73728+ε2*(9039.0/327680)))))
	C1p[1] = ε2 * (5.0/16 + ε2*(-37.0/96+ε2*(1335.0/4096+ε2*(-86171.0/368640+ε2*(4119073.0/28311552)))))
	C1p[2] = ε3 * (29.0/96 + ε2*(-75.0/128+ε2*(2901.0/4096+ε2*(-443327.0/655360))))
	C1p[3] = ε4 * (539.0/1536 + ε2*(-2391.0/2560+ε2*(1082857.0/737280+ε2*(-2722891.0/1548288))))
	C1p[4] = ε5 * (3467.0/7680 + ε2*(-28223.0/18432+ε2*(1361343.0/458752)))
	C1p[5] = ε6 * (38081.0/61440 + ε2*(-733437.0/286720+ε2*(10820079.0/1835008)))
	C1p[6] = ε7 * (459485.0/516096 + ε2*(-709743.0/163840))
	C1p[7] = ε8 * (109167851.0/82575360 + ε2*(-550835669.0/74317824))
	C1p[8] = ε9 * (83141299.0 / 41287680)
	C1p[9] = ε10 * (9303339907.0 / 2972712960)
	//
	return
}

func seriesC2(ε float64) (C2 [10]float64) {
	/*****
	   C2[1] = + 1/2 * ε
	           + 1/16 * ε^3
	           + 1/32 * ε^5
	           + 41/2048 * ε^7
	           + 59/4096 * ε^9
	   C2[2] = + 3/16 * ε^2
	           + 1/32 * ε^4
	           + 35/2048 * ε^6
	           + 47/4096 * ε^8
	           + 557/65536 * ε^10
	   C2[3] = + 5/48 * ε^3
	           + 5/256 * ε^5
	           + 23/2048 * ε^7
	           + 191/24576 * ε^9
	   C2[4] = + 35/512 * ε^4
	           + 7/512 * ε^6
	           + 133/16384 * ε^8
	           + 47/8192 * ε^10
	   C2[5] = + 63/1280 * ε^5
	           + 21/2048 * ε^7
	           + 51/8192 * ε^9
	   C2[6] = + 77/2048 * ε^6
	           + 33/4096 * ε^8
	           + 2607/524288 * ε^10
	   C2[7] = + 429/14336 * ε^7
	           + 429/65536 * ε^9
	   C2[8] = + 6435/262144 * ε^8
	           + 715/131072 * ε^10
	   C2[9] = + 12155/589824 * ε^9
	   C2[10] = + 46189/2621440 * ε^10
	*****/
	ε2 := ε * ε
	ε3 := ε * ε2
	ε4 := ε * ε3
	ε5 := ε * ε4
	ε6 := ε * ε5
	ε7 := ε * ε6
	ε8 := ε * ε7
	ε9 := ε * ε8
	ε10 := ε * ε9
	//
	C2[0] = ε * (1.0/2 + ε2*(1.0/16+ε2*(1.0/32+ε2*(41.0/2048+ε2*(59.0/4096)))))
	C2[1] = ε2 * (3.0/16 + ε2*(1.0/32+ε2*(35.0/2048+ε2*(47.0/4096+ε2*(557.0/65536)))))
	C2[2] = ε3 * (5.0/48 + ε2*(5.0/256+ε2*(23.0/2048+ε2*(191.0/24576))))
	C2[3] = ε4 * (35.0/512 + ε2*(7.0/512+ε2*(133.0/16384+ε2*(47.0/8192))))
	C2[4] = ε5 * (63.0/1280 + ε2*(21.0/2048+ε2*(51.0/8192)))
	C2[5] = ε6 * (77.0/2048 + ε2*(33.0/4096+ε2*(2607.0/524288)))
	C2[6] = ε7 * (429.0/14336 + ε2*(429.0/65536))
	C2[7] = ε8 * (6435.0/262144 + ε2*(715.0/131072))
	C2[8] = ε9 * (12155.0 / 589824)
	C2[9] = ε10 * (46189.0 / 2621440)
	//
	return
}
